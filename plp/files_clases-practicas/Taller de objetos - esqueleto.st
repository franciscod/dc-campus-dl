TestCase subclass: #PolinomiosTest	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-Polinomios'!!PolinomiosTest methodsFor: 'as yet unclassified' stamp: 'pb 11/10/2014 19:04'!test01AlEvaluarUnaConstanteSeObtieneElValorDeLaMisma	| polinomio |		polinomio := Constante conValor: 3. 		self assert: (polinomio evaluarCon: 123) equals: 3! !!PolinomiosTest methodsFor: 'as yet unclassified' stamp: 'pb 11/10/2014 19:06'!test04AlEvaluarUnProductoSeObtieneElValorDeLosPolinomiosEvaluadosMultiplicados	| sumando1 sumando2 polinomio  polinomio2 |		sumando1 := Constante conValor: 1.	sumando2 := Variable new. 		polinomio := Suma de: sumando1 con: sumando2.	polinomio2 := Producto de: polinomio con: polinomio.			self assert: (polinomio2 evaluarCon: 3) equals: 16.! !!PolinomiosTest methodsFor: 'as yet unclassified' stamp: 'pb 11/10/2014 19:06'!test03AlEvaluarUnaSumaSeObtieneElValorDeLaSumaDeLosSumandos	| sumando1 sumando2 polinomio |		sumando1 := Constante conValor: 1.	sumando2 := Variable new. 		polinomio := Suma de: sumando1 con: sumando2.			self assert: (polinomio evaluarCon: 3) equals: 4.! !!PolinomiosTest methodsFor: 'as yet unclassified' stamp: 'pb 11/10/2014 19:04'!test02AlEvaluarUnaVariableSeObtieneElValorQueSeLeEsteAsignando	| polinomio |		polinomio := Variable new. 		self assert: (polinomio evaluarCon: 3) equals: 3.! !!PolinomiosTest methodsFor: 'as yet unclassified' stamp: 'pb 11/10/2014 19:14'!test05SePuedenCrearPolinomiosSumandoYMultiplicando	| sumando1 sumando2 polinomio |	sumando1 := Constante conValor: 1.	sumando2 := Variable new. 		polinomio := sumando1 + sumando2.		self assert: ((polinomio + polinomio) evaluarCon: 1) equals: 4.	self assert: ((polinomio * polinomio) evaluarCon: 2) equals: 9.! !